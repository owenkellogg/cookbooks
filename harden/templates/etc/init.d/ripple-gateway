#! /bin/sh

# if you wish the Daemon to be lauched at boot / stopped at shutdown:
#     INSTALL : update-rc.d ripple-gateway defaults
#     UNINSTALL : update-rc.d -f ripple-gateway remove

### BEGIN INIT INFO
# Provides:          ripple-gateway
# Required-Start:    $remote_fs $named $syslog ripple-rest
# Required-Stop:     $remote_fs $named $syslog ripple-rest
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Ripple gateway API server application.
# Description:       The gateway API server implements an API which is useful
#                    for business partners implementing Ripple gateway
#                    functionality.
### END INIT INFO

# Author: Bryce A. Lynch (bryce at ripple dot com)
# PGP: 0xA4364248 / A177 A590 2869 32AC E2E1  946A FAD8 98D6 A436 4248

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=ripple-gateway
DAEMON_DIR="/opt/ripple-gateway"
DESC="node.js server which implements the Ripple Gateway API."
NODEUSER="gateway"

# Needed to make PM2 happy.
export HOME=/tmp

# The app requires that the IP address it listens on be set with an environment
# variable and not in a configuration file or on the command line.  The app
# defaults to 0.0.0.0.
#export ADDRESS=127.0.0.1

# The app defaults to port 3000/tcp but supports being told to listen on
# another port with an environment variable.
#export PORT=3000

# ABEND if pm2 is not installed.
if [ ! -x /usr/bin/pm2 ]; then
    echo "PM2 not installed." >&2
    exit 1
fi

# Do NOT put "set -e" here!

# Read configuration variable file if one exists.  Note that this can
# potentially change the values of variables defined earlier in this script.
[ -r /etc/default/$INIT_SCRIPT_NAME ] && . /etc/default/$INIT_SCRIPT_NAME

# Load the other rcS variables.
. /lib/init/vars.sh

# Core code.
case "$1" in
    start)
        echo "Starting Ripple gateway application server..."
        cd $DAEMON_DIR
        for i in processes/*.js; do
            /usr/bin/pm2 start --verbose -o /var/log/$i.log \
                -e /var/log/$i.err -p /var/run/$i.pid -u $NODEUSER $i
        done
        ;;

    stop)
        echo "Stopping Ripple gateway application server..."
        cd $DAEMON_DIR
        for i in processes/*.js; do
            /usr/bin/pm2 stop $i
        done
        ;;

    restart)
        echo "Restarting Ripple gateway application server..."
        cd $DAEMON_DIR
        for i in processes/*.js; do
            /usr/bin/pm2 restart $i
        done
        ;;

    status)
        /usr/bin/pm2 list
        ;;

    upgrade)
        if [ `id -u` -gt 0 ]; then
            echo "You must be root to update the $NAME codebase. ABENDing."
            exit 1
        fi

        echo "Updating $NAME to latest version. Press enter to continue or ^C to abort."
        read pause

        # Trap a couple of signals to keep things from getting messed up.
        trap '' 2 # SIGINT
        trap '' 9 # SIGKILL
        trap '' 20 # SIGTSTP

        echo "Stopping $NAME."
        umask 0022
        cd $DAEMON_DIR
        for i in processes/*.js; do
            /usr/bin/pm2 stop $i
        done

        echo "Updating code repository."
        git pull

        echo "Updating NPM modules."
        npm install

        echo "Updating database schemas."
        cd node_modules/ripple-gateway-data-sequelize-adapter
        db-migrate up -m migrations/ --config database.json
        cd ../..

        echo "Starting $NAME."
        for i in processes/*.js; do
            /usr/bin/pm2 start --verbose -o /var/log/$i.log \
                -e /var/log/$i.err -p /var/run/$i.pid -u $NODEUSER $i
        done

        # Re-enable trapped signals.
        trap 2
        trap 9
        trap 20
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|status|upgrade}" >&2
        exit 3
        ;;
esac

# Fin.
exit 0
